@page "/EditDepartment/{Id}"

@using EmployeeManagmentSystem.Data
@using Blazored.Toast.Services

@inject DepartmentService departmentService
@inject NavigationManager NavigationManager
@inject IToastService toastService

<h2>Edit Department</h2>

<form>
    <div class="row">
        <div class="col-sm-8">
            <div class="form-group">
                <label for="id" class="control-label">Department Id</label>
                <input id="id" class="form-control" @bind="@IdAsString" />
            </div>
            <div class="form-group">
                <label for="departmentName" class="control-label">Department Name</label>
                <input id="departmentName" class="form-control" @bind="obj.DepartmentName" />
            </div>
        </div>
    </div>
    <div class="row mt-5">
        <div class="col-md-4">
            <div class="form-group">
                <button class="btn btn-primary" @onclick="UpdateDepartments">Update</button>
                <button class="btn btn-primary" @onclick="Cancel">Cancel</button>
            </div>
        </div>
    </div>
</form>

@code {
    [Parameter]
    public string Id { get; set; }

    private int IdAsInt { get; set; }

    Department obj = new Department();
    private string IdAsString { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (int.TryParse(Id, out int id))
        {
            IdAsInt = id;
            obj = await departmentService.GetDepartmentAsync(IdAsInt);
            IdAsString = Id;
        }
        else
        {
            obj = new Department();
            toastService.ShowError("Invalid Department Id");
            NavigationManager.NavigateTo("ErrorPage");
        }

    }

    protected async Task UpdateDepartments()
    {
        await departmentService.UpdateDepartmentAsync(obj);
        toastService.ShowSuccess("Department Updated");
        NavigationManager.NavigateTo("Departments");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("Departments");
    }
}

