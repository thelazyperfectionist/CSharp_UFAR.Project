@page "/Departments"
@using EmployeeManagmentSystem.Data
@inject DepartmentService departmentService
@inject NavigationManager NavigationManager

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f5f5f5;
    }

    .container {
        margin-top: 20px;
    }

    .card {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }

    .nav-link {
        margin-bottom: 10px;
    }

    .card-header {
        background-color: #f0f0f0;
        border-bottom: none;
    }

    .card-body {
        padding: 20px;
    }

    .table {
        background-color: #fff;
    }

        .table th,
        .table td {
            border: 1px solid #ddd;
            padding: 12px;
        }

        .table th {
            background-color: #f0f0f0;
        }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #f9f9f9;
    }

    .btn {
        border-radius: 5px;
    }

    .btn-success {
        background-color: #5cb85c;
        border-color: #4cae4c;
    }

    .btn-danger {
        background-color: #d9534f;
        border-color: #d43f3a;
    }

    .oi {
        margin-right: 5px;
    }
</style>

<NavLink class="nav-link" href="AddDepartment">
    <span class="oi oi-plus" aria-hidden="true" style="height: 40px;">Add new</span>
</NavLink>

<div class="container">
    <div class="card">
        <div class="card-header">
            <h1 class="text-center">Departments</h1>
        </div>
        <div class="card-body">
            @if (Department == null)
            {
                <p class="text-center"><em>Loading...</em></p>
            }
            else if (Department.Count == 0)
            {
                <p class="text-center"><em>No departments found!</em></p>
            }
            else
            {
                <table class="table table-striped">
                    <thead class="table-dark">
                        <tr>
                            <th>Department Id</th>
                            <th>Department Name</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var department in Department)
                        {
                            <tr>
                                <td>@department.Id</td>
                                <td>@department.DepartmentName</td>
                                <td>
                                    <NavLink class="btn btn-success" href="@($"EditDepartment/{department.Id}")">
                                        <span class="oi oi-pencil" aria-hidden="true"></span> Edit
                                    </NavLink>
                                    <NavLink class="btn btn-danger" href="@($"DeleteDepartment/{department.Id}")">
                                        <span class="oi oi-trash" aria-hidden="true"></span> Delete
                                    </NavLink>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>

@code {
    List<Department> Department;

    protected override async Task OnInitializedAsync()
    {
        Department = await departmentService.GetAllDepartmentsAsync();
    }
}
