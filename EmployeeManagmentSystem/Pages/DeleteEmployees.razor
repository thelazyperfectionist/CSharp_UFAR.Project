@page "/DeleteEmployee/{Id:int}"
@using EmployeeManagmentSystem.Data
@inject EmployeeService employeeService
@inject NavigationManager NavigationManager
@inject IToastService toastService

<h2>Delete Employee</h2>
<hr />

@if (employee != null)
{
    <div class="alert alert-danger" role="alert">
        Are you sure you want to delete the employee <strong>@employee.EmployeeName</strong>?
    </div>
    <button type="button" class="btn btn-danger" @onclick="DeleteEmployee">Delete</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
}
else
{
    <p><em>Loading...</em></p>
}

@code {
    Employee employee;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        employee = await employeeService.GetEmployeeAsync(Id);
    }

    protected async Task DeleteEmployee()
    {
        try
        {
            await employeeService.DeleteEmployeeAsync(employee);
            toastService.ShowSuccess("Employee Deleted");
            NavigationManager.NavigateTo("/Employees");
        }
        catch (Exception ex)
        {
            toastService.ShowError($"Error deleting employee: {ex.Message}");
        }
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/Employees");
    }
}

