@page "/EditEmployee/{Id:int}"
@using EmployeeManagmentSystem.Data
@inject EmployeeService employeeService
@inject DepartmentService departmentService
@inject NavigationManager NavigationManager
@inject IToastService toastService

<h2>Edit Employee</h2>
<hr />

@if (employee != null)
{
    <form>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label for="employeeName" class="control-label">Employee Name</label>
                    <input id="employeeName" class="form-control" @bind="employee.EmployeeName" />
                </div>
                <div class="form-group">
                    <label for="employeeSurname" class="control-label">Employee Surname</label>
                    <input id="employeeSurname" class="form-control" @bind="employee.EmployeeSurname" />
                </div>
                <div class="form-group">
                    <label for="gender" class="control-label">Gender</label>
                    <select id="gender" class="form-control" @bind="employee.Gender">
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="city" class="control-label">City</label>
                    <input id="city" class="form-control" @bind="employee.City" />
                </div>
                <div class="form-group">
                    <label for="departmentName" class="control-label">Department Name</label>
                    @if (DepObj != null)
                    {
                        <select id="departmentName" class="form-control" @bind="employee.DepartmentName">
                            @foreach (var dep in DepObj)
                            {
                                <option value="@dep.DepartmentName">@dep.DepartmentName</option>
                            }
                        </select>
                    }
                    else
                    {
                        <input id="departmentName" class="form-control" @bind="employee.DepartmentName" />
                    }
                </div>
                <div class="form-group">
                    <label for="jobTitle" class="control-label">Job Title</label>
                    <input id="jobTitle" class="form-control" @bind="employee.JobTitle" />
                </div>
                <div class="form-group">
                    <label for="email" class="control-label">Email</label>
                    <input id="email" class="form-control" @bind="employee.Email" />
                </div>
                <div class="form-group">
                    <label for="salary" class="control-label">Salary</label>
                    <input id="salary" class="form-control" @bind="employee.Salary" />
                </div>
            </div>
        </div>
        <div class="row mt-5">
            <div class="col-md-4">
                <div class="form-group">
                    <button type="submit" class="btn btn-primary" @onclick="UpdateEmployee">Save</button>
                    <button type="button" class="btn btn-primary" @onclick="Cancel">Cancel</button>
                </div>
            </div>
        </div>
    </form>
}
else
{
    <p><em>Loading...</em></p>
}

@code {
    Employee employee;
    List<Department> DepObj = new List<Department>();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        employee = await employeeService.GetEmployeeAsync(Id);
        DepObj = await departmentService.GetAllDepartmentsAsync();
    }

    protected async Task UpdateEmployee()
    {
        await employeeService.UpdateEmployeeAsync(employee);
        toastService.ShowSuccess("Employee Updated");
        NavigationManager.NavigateTo("/Employees");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/Employees");
    }
}
